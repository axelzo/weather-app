{"ast":null,"code":"var _jsxFileName = \"/home/axel/Desktop/Projects/weather-app/src/Components/CardGrid/CardGrid.js\";\nimport React from 'react';\nimport Card from '../Card/Card';\nimport './CardGrid.css';\n\nconst CardGrid = ({\n  forecast,\n  newForecast,\n  toggleTempSelect,\n  tempValue\n}) => {\n  if (forecast) {//console.log(\"CardGrid FCD \", forecast.forecastday);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"cards-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: newForecast,\n    className: \"btn btn--info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"New forecast\"), React.createElement(\"div\", {\n    className: \"cards-container__items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: toggleTempSelect,\n    className: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"C\"), React.createElement(\"option\", {\n    value: \"F\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"F\"))), React.createElement(\"div\", {\n    className: \"card-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, forecast ? forecast.forecastday.map((forecastday, index) => {\n    return React.createElement(Card, {\n      key: index,\n      date: forecastday.date,\n      day: forecastday.day,\n      text: forecastday.text,\n      temp: tempValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }) : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"LOADING...\"))); // return (\n  //     <div className=\"card-grid\">\n  //        <Card/>\n  //        <Card/>\n  //     </div>\n  //   );\n};\n\nexport default CardGrid;","map":{"version":3,"sources":["/home/axel/Desktop/Projects/weather-app/src/Components/CardGrid/CardGrid.js"],"names":["React","Card","CardGrid","forecast","newForecast","toggleTempSelect","tempValue","forecastday","map","index","date","day","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,gBAAzB;AAA2CC,EAAAA;AAA3C,CAAD,KAA4D;AAG3E,MAAIH,QAAJ,EAAc,CAEZ;AACD;;AAED,SAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAA8B,IAAA,SAAS,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAQ,IAAA,QAAQ,EAAEC,gBAAlB;AAAoC,IAAA,SAAS,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CAFF,CAFF,EAeE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIF,QAAQ,GACNA,QAAQ,CAACI,WAAT,CAAqBC,GAArB,CAAyB,CAACD,WAAD,EAAcE,KAAd,KAAwB;AAC/C,WACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAEF,WAAW,CAACG,IAFpB;AAGE,MAAA,GAAG,EAAEH,WAAW,CAACI,GAHnB;AAIE,MAAA,IAAI,EAAEJ,WAAW,CAACK,IAJpB;AAKE,MAAA,IAAI,EAAEN,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVD,CADM,GAaN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBN,CAfF,CAFF,CAR2E,CA+C3E;AAEA;AACA;AACA;AACA;AACA;AACD,CAtDD;;AAwDA,eAAeJ,QAAf","sourcesContent":["import React from 'react';\nimport Card from '../Card/Card';\nimport './CardGrid.css';\n\nconst CardGrid = ({ forecast, newForecast, toggleTempSelect, tempValue }) => {\n\n  \n  if (forecast) {\n    \n    //console.log(\"CardGrid FCD \", forecast.forecastday);\n  }\n\n  return (\n\n    <div className=\"cards-container\">\n      <button onClick={newForecast} className=\"btn btn--info\">New forecast</button>\n      <div className=\"cards-container__items\">\n\n        <select onChange={toggleTempSelect} className=\"select\">\n          <option value=\"C\">C</option>\n          <option value=\"F\">F</option>\n        </select>\n      </div>\n\n\n\n\n\n\n      <div className=\"card-grid\">\n\n        {\n          forecast ?\n            forecast.forecastday.map((forecastday, index) => {\n              return (\n                <Card\n                  key={index}\n                  date={forecastday.date}\n                  day={forecastday.day}\n                  text={forecastday.text}\n                  temp={tempValue}\n                />\n              );\n            })\n            :\n            <h1>LOADING...</h1>\n        }\n      </div>\n    </div>\n  );\n\n  // return (\n\n  //     <div className=\"card-grid\">\n  //        <Card/>\n  //        <Card/>\n  //     </div>\n  //   );\n}\n\nexport default CardGrid;"]},"metadata":{},"sourceType":"module"}