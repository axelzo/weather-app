{"ast":null,"code":"var _jsxFileName = \"/home/axel/Desktop/Projects/weather-app/src/Components/CardDetail/CardDetail.js\";\nimport React from 'react';\nimport './CardDetail.css';\n\nfunction CardDetail({\n  current,\n  location,\n  forecast,\n  cardSelected\n}) {\n  console.log(cardSelected);\n\n  if (current && location && forecast) {\n    return React.createElement(\"div\", {\n      className: \"card-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"card-detail__item card-detail__title--blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, forecast.forecastday[0].day.condition.text), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"card-detail__item card-detail__date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, current.date), React.createElement(\"img\", {\n      src: forecast.forecastday[\"0\"].day.condition.icon,\n      alt: \"Avatar\",\n      className: \" card-detail__item card-detail__image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-detail__item card-detail__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"\".concat(current.last_updated))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"\".concat(location.name, \", \").concat(location.region, \", \").concat(location.country))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"\".concat(forecast.forecastday[\"0\"].astro.sunrise, \" Sunrise\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"\".concat(forecast.forecastday[\"0\"].astro.sunset, \" Sunset\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"\".concat(forecast.forecastday[\"0\"].astro.moonrise, \" Moonrise\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"\".concat(forecast.forecastday[\"0\"].astro.moonset, \" Moonset\"))));\n  }\n\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"LOADING ...\");\n}\n\nexport default CardDetail;","map":{"version":3,"sources":["/home/axel/Desktop/Projects/weather-app/src/Components/CardDetail/CardDetail.js"],"names":["React","CardDetail","current","location","forecast","cardSelected","console","log","forecastday","day","condition","text","date","icon","last_updated","name","region","country","astro","sunrise","sunset","moonrise","moonset"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,kBAAP;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA;AAA/B,CAApB,EAAkE;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AACE,MAAIH,OAAO,IAAIC,QAAX,IAAuBC,QAA3B,EAAqC;AACnC,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,4CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4DA,QAAQ,CAACI,WAAT,CAAqB,CAArB,EAAwBC,GAAxB,CAA4BC,SAA5B,CAAsCC,IAAlG,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAG,MAAA,SAAS,EAAC,qCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDT,OAAO,CAACU,IAA5D,CAHF,EAIE;AAAK,MAAA,GAAG,EAAER,QAAQ,CAACI,WAAT,CAAqB,GAArB,EAA0BC,GAA1B,CAA8BC,SAA9B,CAAwCG,IAAlD;AAAwD,MAAA,GAAG,EAAC,QAA5D;AAAqE,MAAA,SAAS,EAAC,uCAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAOX,OAAO,CAACY,YAAf,EAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAOX,QAAQ,CAACY,IAAhB,eAAyBZ,QAAQ,CAACa,MAAlC,eAA6Cb,QAAQ,CAACc,OAAtD,EAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQb,QAAQ,CAACI,WAAT,CAAqB,GAArB,EAA0BU,KAA1B,CAAgCC,OAAxC,cANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQf,QAAQ,CAACI,WAAT,CAAqB,GAArB,EAA0BU,KAA1B,CAAgCE,MAAxC,aARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQhB,QAAQ,CAACI,WAAT,CAAqB,GAArB,EAA0BU,KAA1B,CAAgCG,QAAxC,eAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQjB,QAAQ,CAACI,WAAT,CAAqB,GAArB,EAA0BU,KAA1B,CAAgCI,OAAxC,cAZF,CALF,CADF;AAsBD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH;;AACD,eAAerB,UAAf","sourcesContent":["import React from 'react';\n\nimport './CardDetail.css';\n\nfunction CardDetail({ current, location, forecast, cardSelected}) {\n  console.log(cardSelected);\n    if (current && location && forecast) {\n      return (\n        <div className=\"card-detail\">\n          <h1 className=\"card-detail__item card-detail__title--blue\">{forecast.forecastday[0].day.condition.text}</h1>\n          <br />\n          <p className=\"card-detail__item card-detail__date\">{current.date}</p>\n          <img src={forecast.forecastday[\"0\"].day.condition.icon} alt=\"Avatar\" className=\" card-detail__item card-detail__image\" />\n          <div className=\"card-detail__item card-detail__container\">\n            <h2><b>{`${current.last_updated}`}</b></h2>\n            <h2><b>{`${location.name}, ${location.region}, ${location.country}`}</b></h2>\n            <br />\n            <br />\n            <br />\n            <h3>{`${forecast.forecastday[\"0\"].astro.sunrise} Sunrise`}</h3>\n            <br />\n            <h3>{`${forecast.forecastday[\"0\"].astro.sunset} Sunset`}</h3>\n            <br />\n            <h3>{`${forecast.forecastday[\"0\"].astro.moonrise} Moonrise`}</h3>\n            <br />\n            <h3>{`${forecast.forecastday[\"0\"].astro.moonset} Moonset`}</h3>\n          </div>\n        </div>\n      );\n    }\n    return <h1>LOADING ...</h1>;\n}\nexport default CardDetail;"]},"metadata":{},"sourceType":"module"}