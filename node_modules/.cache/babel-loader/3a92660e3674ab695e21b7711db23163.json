{"ast":null,"code":"import { HighContrastSelector, keyframes, noWrap, getGlobalClassNames } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-ProgressIndicator',\n  itemName: 'ms-ProgressIndicator-itemName',\n  itemDescription: 'ms-ProgressIndicator-itemDescription',\n  itemProgress: 'ms-ProgressIndicator-itemProgress',\n  progressTrack: 'ms-ProgressIndicator-progressTrack',\n  progressBar: 'ms-ProgressIndicator-progressBar'\n};\nvar IndeterminateProgress = keyframes({\n  '0%': {\n    left: '-30%'\n  },\n  '100%': {\n    left: '100%'\n  }\n});\nvar IndeterminateProgressRTL = keyframes({\n  '100%': {\n    right: '-30%'\n  },\n  '0%': {\n    right: '100%'\n  }\n});\nexport var getStyles = function (props) {\n  var _a, _b;\n\n  var isRTL = getRTL();\n  var className = props.className,\n      indeterminate = props.indeterminate,\n      theme = props.theme,\n      _c = props.barHeight,\n      barHeight = _c === void 0 ? 2 : _c;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var marginBetweenText = 8;\n  var textHeight = 18;\n  var progressTrackColor = palette.neutralLight;\n  return {\n    root: [classNames.root, fonts.medium, className],\n    itemName: [classNames.itemName, noWrap, {\n      color: semanticColors.bodyText,\n      paddingTop: marginBetweenText / 2,\n      lineHeight: textHeight + 2\n    }],\n    itemDescription: [classNames.itemDescription, {\n      color: semanticColors.bodySubtext,\n      fontSize: fonts.small.fontSize,\n      lineHeight: textHeight\n    }],\n    itemProgress: [classNames.itemProgress, {\n      position: 'relative',\n      overflow: 'hidden',\n      height: barHeight,\n      padding: marginBetweenText + \"px 0\"\n    }],\n    progressTrack: [classNames.progressTrack, {\n      position: 'absolute',\n      width: '100%',\n      height: barHeight,\n      backgroundColor: progressTrackColor,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderBottom: '1px solid WindowText'\n      }, _a)\n    }],\n    progressBar: [{\n      backgroundColor: palette.themePrimary,\n      height: barHeight,\n      position: 'absolute',\n      transition: 'width .3s ease',\n      width: 0,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _b)\n    }, indeterminate ? {\n      position: 'absolute',\n      minWidth: '33%',\n      background: \"linear-gradient(to right, \" + progressTrackColor + \" 0%, \" + palette.themePrimary + \" 50%, \" + progressTrackColor + \" 100%)\",\n      animation: (isRTL ? IndeterminateProgressRTL : IndeterminateProgress) + \" 3s infinite\"\n    } : {\n      transition: 'width .15s linear'\n    }, classNames.progressBar]\n  };\n};","map":null,"metadata":{},"sourceType":"module"}