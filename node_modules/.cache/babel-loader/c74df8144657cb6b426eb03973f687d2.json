{"ast":null,"code":"import { getGlobalClassNames, HighContrastSelectorWhite, HighContrastSelectorBlack, HighContrastSelector } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Link'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c;\n\n  var className = props.className,\n      isButton = props.isButton,\n      isDisabled = props.isDisabled,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors; // Tokens\n\n  var linkColor = semanticColors.link;\n  var linkInteractedColor = semanticColors.linkHovered;\n  var linkDisabledColor = semanticColors.disabledText;\n  var focusBorderColor = semanticColors.focusBorder;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      color: linkColor,\n      outline: 'none',\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      selectors: (_a = {\n        '.ms-Fabric--isFocusVisible &:focus': {\n          // Can't use getFocusStyle because it doesn't support wrapping links\n          // https://github.com/OfficeDev/office-ui-fabric-react/issues/4883#issuecomment-406743543\n          // A box-shadow allows the focus rect to wrap links that span multiple lines\n          // and helps the focus rect avoid getting clipped.\n          boxShadow: \"0 0 0 1px \" + focusBorderColor + \" inset\",\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            outline: '1px solid WindowText'\n          }, _b)\n        }\n      }, _a[HighContrastSelector] = {\n        // For IE high contrast mode\n        borderBottom: 'none'\n      }, _a)\n    }, isButton && {\n      background: 'none',\n      backgroundColor: 'transparent',\n      border: 'none',\n      cursor: 'pointer',\n      display: 'inline',\n      margin: 0,\n      overflow: 'inherit',\n      padding: 0,\n      textAlign: 'left',\n      textOverflow: 'inherit',\n      userSelect: 'text',\n      borderBottom: '1px solid transparent',\n      selectors: (_c = {}, _c[HighContrastSelectorBlack] = {\n        color: '#FFFF00'\n      }, _c[HighContrastSelectorWhite] = {\n        color: '#00009F'\n      }, _c)\n    }, !isButton && {\n      textDecoration: 'none'\n    }, isDisabled && ['is-disabled', {\n      color: linkDisabledColor,\n      cursor: 'default'\n    }, {\n      selectors: {\n        '&:link, &:visited': {\n          pointerEvents: 'none'\n        }\n      }\n    }], !isDisabled && {\n      selectors: {\n        '&:active, &:hover, &:active:hover': {\n          color: linkInteractedColor,\n          textDecoration: 'underline'\n        },\n        '&:focus': {\n          color: linkColor\n        }\n      }\n    }, classNames.root, className]\n  };\n};","map":null,"metadata":{},"sourceType":"module"}